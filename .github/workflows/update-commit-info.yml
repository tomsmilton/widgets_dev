name: Update Commit Info

on:
  push:
    branches:
      - '**'  # Runs on push to any branch

jobs:
  update-commit-info:
    runs-on: ubuntu-latest
    
    # Only run if the push is not from the bot itself (to avoid infinite loops)
    if: github.actor != 'github-actions[bot]'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Use a personal access token or GITHUB_TOKEN with write permissions
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create or update git_commit.json
        run: |
          # Create JSON content using jq to ensure proper escaping
          jq -n \
            --arg sha "${{ github.sha }}" \
            --arg short_sha "$(echo ${{ github.sha }} | cut -c1-7)" \
            --arg author_name "${{ github.event.head_commit.author.name }}" \
            --arg author_email "${{ github.event.head_commit.author.email }}" \
            --arg timestamp "${{ github.event.head_commit.timestamp }}" \
            --arg message "${{ github.event.head_commit.message }}" \
            --arg branch "${{ github.ref_name }}" \
            --arg repository "${{ github.repository }}" \
            --arg updated_at "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
            '{
              commit: {
                sha: $sha,
                short_sha: $short_sha,
                author: {
                  name: $author_name,
                  email: $author_email
                },
                timestamp: $timestamp,
                message: $message,
                url: ("https://github.com/" + $repository + "/commit/" + $sha)
              },
              branch: $branch,
              repository: $repository,
              updated_at: $updated_at
            }' > git_commit.json
          
      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Check if file has changed
          if git diff --quiet git_commit.json; then
            echo "No changes to commit"
          else
            git add git_commit.json
            git commit -m "Update git_commit.json with latest commit info [skip ci]"
            git push
          fi
